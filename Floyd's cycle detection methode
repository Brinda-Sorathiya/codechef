def findDuplicate(nums):
    # Initialize the pointers
    slow = nums[0]
    fast = nums[0]

    # Phase 1: Find the intersection point of the two pointers
    while True:
        slow = nums[slow]
        fast = nums[nums[fast]]

        if slow == fast:
            break

    # Phase 2: Move one pointer to the start and keep the other at the intersection point
    slow = nums[0]
    while slow != fast:
        slow = nums[slow]
        fast = nums[fast]

    # The meeting point is the entrance of the cycle, which is the duplicate number
    return slow

# Example usage:
nums1 = [1,3,4,2,2]
nums2 = [3,1,3,4,2]

print(findDuplicate(nums1))  # Output: 2
print(findDuplicate(nums2))  # Output: 3
